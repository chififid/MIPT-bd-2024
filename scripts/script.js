const body = document.body;
const header = document.getElementById("header");
const anchors = document.querySelectorAll(".block");
const navItems = document.querySelectorAll(".header__link");
const open = "block-open";
const scrollUp = "scroll-up";
const scrollDown = "scroll-down";
const scrollTransition = "scroll-transition";
const navItemActive = "header__link-active";

let fixedHeader = false;
let lastScroll = 0;

let anchorsHeight = {};
updateaAnchorsHeight();
updateaNavItems();

window.addEventListener("scroll", () => {
  const currentScroll = window.pageYOffset;
  updateaAnchorsHeight();
  updateaNavItems();

  if (currentScroll <= 0) {
    fixedHeader = false;
  }

  if (currentScroll <= header.offsetHeight && !fixedHeader) {
    body.classList.remove(scrollTransition);
    header.style.transform = `translate3d(0, -${currentScroll}px, 0)`;
    return;
  } else {
    body.classList.add(scrollTransition);
    header.style.transform = null;
    fixedHeader = true;
  }

  if (currentScroll > lastScroll && !body.classList.contains(scrollDown)) {
    // down
    body.classList.remove(scrollUp);
    body.classList.add(scrollDown);
    header.classList.remove(open);
  } else if (currentScroll < lastScroll && body.classList.contains(scrollDown)) {
    // up
    body.classList.remove(scrollDown);
    body.classList.add(scrollUp);
  }

  lastScroll = currentScroll;
});

function updateaNavItems() {
  const yPos = window.scrollY + window.innerHeight / 2;
  const url =  window.location.href.split('?')[0];

  navItems.forEach(navElement => {
    if (navElement.href === url) {
      navElement.classList.add(navItemActive);
    } else {
      navElement.classList.remove(navItemActive);
    }
  });

  Object.entries(anchorsHeight).forEach(([aKey, aVal]) => {
    if (yPos > aVal) {
      navItems.forEach(navElement => {
        console.log(navElement.href === url)
        if (navElement.href.includes("#" + aKey)) {
          navElement.classList.add(navItemActive);
        } else {
          navElement.classList.remove(navItemActive);
        }
      });
      return;
    }
  });
}

function updateaAnchorsHeight() {
  anchors.forEach(e => {
    if (e.hasAttribute('id')) {
      const rect = e.getBoundingClientRect();
      anchorsHeight[e.id] = rect.top + window.scrollY;
    }
  });
}

const supportMessages = [
  "–¢–ê–ö –î–ï–†–ñ–ê–¢–¨! üí™",
  "–ú–´ –í –¢–ï–ë–Ø –í–ï–†–ò–ú! ‚ú®",
  "–§–ò–ó–¢–ï–• –ó–ê –¢–ï–ë–Ø! üéì",
  "–°–û–ö–£–†–°–ù–ò–ö–ò –° –¢–û–ë–û–ô! ü§ù",
  "–ù–ê–î–ï–ñ–î–ò–ù –ì–û–í–û–†–ò–¢ –¢–´ –ï–ì–û –õ–Æ–ë–ò–ú–´–ô –°–õ–û–ù üêò",
  "–ë–î–Æ–õ–ï–í –°–ò–õ–ê! üí´",
  "–í–ü–ï–†–Å–î –ö –ü–û–ë–ï–î–ï! üèÜ",
  "–ú–´ –° –¢–û–ë–û–ô! ‚ù§Ô∏è",
  "–ö–†–ï–°–¢–¨–Ø–ù–ò–ù –í–û–õ–¨–ù–û–ô –ü–õ–ê–ù–ï–¢–´, –í–ï–î–ò –ù–ê–°! üåç",
  "304-1 –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–¢! üöÄ",
  "–¢–´ –õ–£–ß–®–ò–ô! ‚≠ê",
  "–î–ï–ì–†–ê–î –û–î–û–ë–†–Ø–ï–¢! üëä",
  "–û–ú–°–ö -> –ö–ò–ï–í -> –§–ò–ó–¢–ï–• -> –ü–û–ë–ï–î–ê! üöÄ",
  "–ö–û–ù–¶–ï–ü–¶–ò–Ø –†–ï–®–ê–ï–¢! üìà",
  "–í–ï–†–ò–ú –í –¢–ï–ë–Ø! üåü",
  "–ù–ê–®–ê –ù–ê–î–ï–ñ–î–ê! üéØ",
  "–°–¶–ï–ù–ö–ê –ù–ê –ü–û–°–í–Ø–¢–ï - –≠–¢–û –ë–´–õ–û –ì–ï–ù–ò–ê–õ–¨–ù–û! üé≠",
  "–ë–î–Æ–õ–ï–í 2024! üî•",
  "–§–ò–ó–¢–ï–• –í–´–ë–ò–†–ê–ï–¢ –¢–ï–ë–Ø! ‚úä",
  "–§–ò–ó–¢–ï–• –í–´–ë–ò–†–ê–ï–¢ –ë–î–Æ–õ–ï–í–ê! üéì",
  "–¢–´ –°–ü–†–ê–í–ò–®–¨–°–Ø! üí´",
  "–ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú! ‚ù§Ô∏è",
  "–¢–í–û–Ø –£–õ–´–ë–ö–ê –ú–ï–ù–Ø–ï–¢ –§–ò–ó–¢–ï–•! üòä",
  "–ù–ê–® –ì–ï–†–û–ô! ü¶∏‚Äç‚ôÇÔ∏è",
  "–í–ú–ï–°–¢–ï –ü–û–ë–ï–î–ò–ú! üèÜ",
  "–¢–´ –°–ú–û–ñ–ï–®–¨! üí™"
];

const colors = [
    "#FF0000", // –Ø—Ä–∫–∏–π –∫—Ä–∞—Å–Ω—ã–π
    "#00FF00", // –õ–∞–π–º–æ–≤—ã–π
    "#0000FF", // –Ø—Ä–∫–∏–π —Å–∏–Ω–∏–π
    "#FF00FF", // –ú–∞–¥–∂–µ–Ω—Ç–∞
    "#00FFFF", // –¶–∏–∞–Ω
    "#FFFF00", // –ñ—ë–ª—Ç—ã–π
    "#FF4500", // –û—Ä–∞–Ω–∂–µ–≤–æ-–∫—Ä–∞—Å–Ω—ã–π
    "#8A2BE2", // –°–∏–Ω–µ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    "#FF1493", // –ì–ª—É–±–æ–∫–∏–π —Ä–æ–∑–æ–≤—ã–π
    "#7FFF00", // –®–∞—Ä—Ç—Ä–µ–∑
    "#FF69B4", // –Ø—Ä–∫–æ-—Ä–æ–∑–æ–≤—ã–π
];

document.querySelectorAll('.header__support-btn').forEach(btn => {
    btn.addEventListener('click', function(e) {
        const message = document.createElement('div');
        message.className = 'support-message';
        
        // –°–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ü–≤–µ—Ç
        message.textContent = supportMessages[Math.floor(Math.random() * supportMessages.length)];
        message.style.color = colors[Math.floor(Math.random() * colors.length)];
    
        // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤–æ–∫—Ä—É–≥ —Ç–æ—á–∫–∏ –∫–ª–∏–∫–∞
        const offset = 20;
        const angle = Math.random() * Math.PI * 2;
        const distance = Math.random() * offset;
        const randomX = Math.cos(angle) * distance;
        const randomY = Math.sin(angle) * distance;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –≤ DOM –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
        document.body.appendChild(message);
        
        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–ª–∏–∫–∞ —Å —É—á–µ—Ç–æ–º —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–µ–∫—Å—Ç–∞
        message.style.left = (e.clientX + randomX - message.offsetWidth/2) + 'px';
        message.style.top = (e.clientY + randomY - message.offsetHeight/2) + 'px';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞ –∏ –≤—ã–±–∏—Ä–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        const rect = message.getBoundingClientRect();
        const directions = ['up-right', 'up-left', 'down-right', 'down-left'];
        let direction;

        if (rect.top < 50) {
            // –ï—Å–ª–∏ –±–ª–∏–∑–∫–æ –∫ –≤–µ—Ä—Ö—É —ç–∫—Ä–∞–Ω–∞
            direction = Math.random() > 0.5 ? 'down-right' : 'down-left';
        } else if (rect.bottom > window.innerHeight - 50) {
            // –ï—Å–ª–∏ –±–ª–∏–∑–∫–æ –∫ –Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
            direction = Math.random() > 0.5 ? 'up-right' : 'up-left';
        } else if (rect.left < 50) {
            // –ï—Å–ª–∏ –±–ª–∏–∑–∫–æ –∫ –ª–µ–≤–æ–º—É –∫—Ä–∞—é
            direction = Math.random() > 0.5 ? 'up-right' : 'down-right';
        } else if (rect.right > window.innerWidth - 50) {
            // –ï—Å–ª–∏ –±–ª–∏–∑–∫–æ –∫ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
            direction = Math.random() > 0.5 ? 'up-left' : 'down-left';
        } else {
            // –ï—Å–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ - —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            direction = directions[Math.floor(Math.random() * directions.length)];
        }
        
        message.setAttribute('data-direction', direction);
        
        setTimeout(() => {
            message.remove();
        }, 2000);
    });
});

const burgerMenu = document.getElementById("burger-menu");
const headerContainer = document.querySelector(".header");

burgerMenu.addEventListener("click", () => {
    headerContainer.classList.toggle("block-open");
});

// –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener("click", (e) => {
    if (!headerContainer.contains(e.target) && headerContainer.classList.contains("block-open")) {
        headerContainer.classList.remove("block-open");
    }
});